apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f ..\docker-compose.yml
    kompose.version: 1.27.0 (b0ed6a2c9)
  creationTimestamp: null
  labels:
    io.kompose.service: api
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: api
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f ..\docker-compose.yml
        kompose.version: 1.27.0 (b0ed6a2c9)
      creationTimestamp: null
      labels:
        io.kompose.network/app-network: "true"
        io.kompose.network/webnet: "true"
        io.kompose.service: api
    spec:
      containers:
        - env:
            - name: BASE
              valueFrom:
                configMapKeyRef:
                  key: BASE
                  name: api--env
            - name: COOKIE_DOMAIN
              valueFrom:
                configMapKeyRef:
                  key: COOKIE_DOMAIN
                  name: api--env
            - name: DB_DATABASE
              valueFrom:
                configMapKeyRef:
                  key: DB_DATABASE
                  name: api--env
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  key: DB_HOST
                  name: api--env
            - name: DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: DB_PASSWORD
                  name: api--env
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  key: DB_PORT
                  name: api--env
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  key: DB_USER
                  name: api--env
            - name: FRONT_URL
              valueFrom:
                configMapKeyRef:
                  key: FRONT_URL
                  name: api--env
            - name: GLOBAL_PREFIX
              valueFrom:
                configMapKeyRef:
                  key: GLOBAL_PREFIX
                  name: api--env
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  key: JWT_SECRET
                  name: api--env
            - name: JWT_TOKEN_AUDIENCE
              valueFrom:
                configMapKeyRef:
                  key: JWT_TOKEN_AUDIENCE
                  name: api--env
            - name: JWT_TOKEN_EXPIRES
              valueFrom:
                configMapKeyRef:
                  key: JWT_TOKEN_EXPIRES
                  name: api--env
            - name: JWT_TOKEN_ISSUER
              valueFrom:
                configMapKeyRef:
                  key: JWT_TOKEN_ISSUER
                  name: api--env
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  key: PORT
                  name: api--env
            - name: SESSION_SECRET
              valueFrom:
                configMapKeyRef:
                  key: SESSION_SECRET
                  name: api--env
            - name: callbackURL
              valueFrom:
                configMapKeyRef:
                  key: callbackURL
                  name: api--env
            - name: clientID
              valueFrom:
                configMapKeyRef:
                  key: clientID
                  name: api--env
            - name: clientSecret
              valueFrom:
                configMapKeyRef:
                  key: clientSecret
                  name: api--env
          image: supergike/itakagreen-api:latest
          workingDir: /usr/src/app
          name: api
          ports:
            - containerPort: 8080
          resources: {}
          imagePullPolicy: Always
      restartPolicy: Always
      volumes:
        - name: api-claim0
          persistentVolumeClaim:
            claimName: api-claim0
status: {}
